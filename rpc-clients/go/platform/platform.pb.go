// Code generated by protoc-gen-go. DO NOT EDIT.
// source: platform/platform.proto

package platform

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TODO: use google empty,timestamp,latlng
// currently TS json client wont allow imports other than validator
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa9581d889443fc5, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Timestamp struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive.
	Nanos                int32    `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa9581d889443fc5, []int{1}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type LatLng struct {
	// The latitude in degrees. It must be in the range [-90.0, +90.0].
	Latitude float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// The longitude in degrees. It must be in the range [-180.0, +180.0].
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatLng) Reset()         { *m = LatLng{} }
func (m *LatLng) String() string { return proto.CompactTextString(m) }
func (*LatLng) ProtoMessage()    {}
func (*LatLng) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa9581d889443fc5, []int{2}
}

func (m *LatLng) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatLng.Unmarshal(m, b)
}
func (m *LatLng) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatLng.Marshal(b, m, deterministic)
}
func (m *LatLng) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatLng.Merge(m, src)
}
func (m *LatLng) XXX_Size() int {
	return xxx_messageInfo_LatLng.Size(m)
}
func (m *LatLng) XXX_DiscardUnknown() {
	xxx_messageInfo_LatLng.DiscardUnknown(m)
}

var xxx_messageInfo_LatLng proto.InternalMessageInfo

func (m *LatLng) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *LatLng) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

// If firebase token expired, meta 'expired_fbase_token':'true' will be return
// If platform token expired, meta 'expired_platform_token':'true' will be
// return If platform or firebase token has no email,
// 'token_missing_email':'true' will be returned When firebaseToken sent
// (logging in / creating user) 'customer_delinquent':'true' means delinquent
// stripe customer
type TokenReq struct {
	// Send firebase token during intial login (when no platform token exists)
	FirebaseToken        string   `protobuf:"bytes,1,opt,name=firebaseToken,proto3" json:"firebaseToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenReq) Reset()         { *m = TokenReq{} }
func (m *TokenReq) String() string { return proto.CompactTextString(m) }
func (*TokenReq) ProtoMessage()    {}
func (*TokenReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa9581d889443fc5, []int{3}
}

func (m *TokenReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenReq.Unmarshal(m, b)
}
func (m *TokenReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenReq.Marshal(b, m, deterministic)
}
func (m *TokenReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenReq.Merge(m, src)
}
func (m *TokenReq) XXX_Size() int {
	return xxx_messageInfo_TokenReq.Size(m)
}
func (m *TokenReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenReq.DiscardUnknown(m)
}

var xxx_messageInfo_TokenReq proto.InternalMessageInfo

func (m *TokenReq) GetFirebaseToken() string {
	if m != nil {
		return m.FirebaseToken
	}
	return ""
}

type TokenRes struct {
	Jwt                  string   `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Exp                  int64    `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenRes) Reset()         { *m = TokenRes{} }
func (m *TokenRes) String() string { return proto.CompactTextString(m) }
func (*TokenRes) ProtoMessage()    {}
func (*TokenRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa9581d889443fc5, []int{4}
}

func (m *TokenRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenRes.Unmarshal(m, b)
}
func (m *TokenRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenRes.Marshal(b, m, deterministic)
}
func (m *TokenRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenRes.Merge(m, src)
}
func (m *TokenRes) XXX_Size() int {
	return xxx_messageInfo_TokenRes.Size(m)
}
func (m *TokenRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenRes.DiscardUnknown(m)
}

var xxx_messageInfo_TokenRes proto.InternalMessageInfo

func (m *TokenRes) GetJwt() string {
	if m != nil {
		return m.Jwt
	}
	return ""
}

func (m *TokenRes) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "com.abpsamtwirp.platform.Empty")
	proto.RegisterType((*Timestamp)(nil), "com.abpsamtwirp.platform.Timestamp")
	proto.RegisterType((*LatLng)(nil), "com.abpsamtwirp.platform.LatLng")
	proto.RegisterType((*TokenReq)(nil), "com.abpsamtwirp.platform.TokenReq")
	proto.RegisterType((*TokenRes)(nil), "com.abpsamtwirp.platform.TokenRes")
}

func init() { proto.RegisterFile("platform/platform.proto", fileDescriptor_fa9581d889443fc5) }

var fileDescriptor_fa9581d889443fc5 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x4f, 0x4b, 0xc3, 0x30,
	0x18, 0xc6, 0xed, 0x46, 0xf7, 0xe7, 0x05, 0x41, 0x82, 0x68, 0xd9, 0xc5, 0x51, 0x3c, 0xec, 0xb2,
	0x54, 0xa6, 0x78, 0xf1, 0x32, 0x07, 0x1e, 0x84, 0x81, 0x18, 0x87, 0x87, 0xdd, 0xd2, 0x2e, 0xed,
	0xe2, 0x9a, 0x26, 0x36, 0xd9, 0xaa, 0x37, 0x3f, 0x9a, 0xdf, 0x44, 0xf0, 0x93, 0x48, 0xb3, 0xb5,
	0x22, 0x22, 0xe6, 0xf4, 0xbc, 0x4f, 0x9e, 0x5f, 0xde, 0xc0, 0x03, 0xc7, 0x2a, 0xa5, 0x26, 0x96,
	0xb9, 0x08, 0x2a, 0x81, 0x55, 0x2e, 0x8d, 0x44, 0x5e, 0x24, 0x05, 0xa6, 0xa1, 0xd2, 0x54, 0x98,
	0x82, 0xe7, 0x0a, 0x57, 0xf7, 0xbd, 0xcb, 0x84, 0x9b, 0xe5, 0x3a, 0xc4, 0x91, 0x14, 0x81, 0x28,
	0xb8, 0x59, 0xc9, 0x22, 0x48, 0xe4, 0xd0, 0x62, 0xc3, 0x0d, 0x4d, 0xf9, 0x82, 0x1a, 0x99, 0xeb,
	0xa0, 0x96, 0xdb, 0x17, 0xfd, 0x36, 0xb8, 0x37, 0x42, 0x99, 0x57, 0xff, 0x0a, 0xba, 0x33, 0x2e,
	0x98, 0x36, 0x54, 0x28, 0xe4, 0x41, 0x5b, 0xb3, 0x48, 0x66, 0x0b, 0xed, 0x39, 0x7d, 0x67, 0xd0,
	0x24, 0xd5, 0x88, 0x0e, 0xc1, 0xcd, 0x68, 0x26, 0xb5, 0xd7, 0xe8, 0x3b, 0x03, 0x97, 0x6c, 0x07,
	0x3f, 0x87, 0xd6, 0x94, 0x9a, 0x69, 0x96, 0xa0, 0x11, 0x74, 0x52, 0x6a, 0xb8, 0x59, 0x2f, 0x98,
	0x45, 0x9d, 0xc9, 0xd1, 0xe7, 0xc7, 0x09, 0xba, 0xdd, 0x2b, 0xcf, 0xdb, 0xe3, 0xfb, 0xfd, 0x4e,
	0x8c, 0x49, 0x9d, 0x43, 0x17, 0xd0, 0x4d, 0x65, 0x96, 0x6c, 0xa1, 0xc6, 0x2f, 0x28, 0xae, 0xa0,
	0x78, 0x4c, 0xbe, 0x83, 0xfe, 0x19, 0x74, 0x66, 0x72, 0xc5, 0x32, 0xc2, 0x9e, 0xd1, 0x29, 0xec,
	0xc7, 0x3c, 0x67, 0x21, 0xd5, 0xcc, 0x7a, 0x76, 0x75, 0x97, 0xfc, 0x34, 0x7d, 0x5c, 0x13, 0x1a,
	0x1d, 0x40, 0xf3, 0xa9, 0x30, 0xbb, 0x5c, 0x29, 0x4b, 0x87, 0xbd, 0x28, 0xbb, 0xbf, 0x49, 0x4a,
	0x39, 0x9a, 0x43, 0xfb, 0x7a, 0x6d, 0x96, 0x0f, 0x9b, 0x08, 0xdd, 0x81, 0x6b, 0x51, 0xe4, 0xe3,
	0xbf, 0x2a, 0xc0, 0xd5, 0x6f, 0x7a, 0xff, 0x67, 0xf4, 0x04, 0xe6, 0x9d, 0xca, 0x0c, 0x5b, 0xb6,
	0x8a, 0xf3, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x10, 0xb7, 0x10, 0xe7, 0xf7, 0x01, 0x00, 0x00,
}
